<?xml version="1.0" encoding="UTF-8"?>

<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc 

https://www.springframework.org/schema/mvc/spring-mvc.xsd 
		http://www.springframework.org/schema/beans 
https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context 
https://www.springframework.org/schema/context/spring-context.xsd">


	<!--base-package와 그 하위 패키지를 감시하여 등록가능한 도구(component)를 모두찾아 자동등록하는 설정 -->
	<context:component-scan base-package="com.kk.spring10_2"/>	
	
	<!-- DispatcherServlet 이 알아야할 설정 등록 -->
	
	<!--  @Controller 같은 annotation 활성화 -->
	<annotation-driven/>

<beans:bean class = "org.springframework.web.servlet.view.InternalResourceViewResolver">
<beans:property name="prefix" value="/WEB-INF/views/"></beans:property>
<beans:property name="suffix" value=".jsp"> </beans:property> 
</beans:bean>

<resources location= "/resources/" mapping="/res/**"> </resources>




	<!-- 
		데이터베이스 도구를 등록
		- 연결 도구 : 
			org.springframework.jdbc.datasource.DriverManagerDataSource
			org.apache.commons.dbcp2.BasicDataSource
		- 명령 도구
			org.springframework.jdbc.core.JdbcTemplate
	 -->
	<beans:bean id="driverManager" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<beans:property name="driverClassName" value="oracle.jdbc.OracleDriver"></beans:property>
		<beans:property name="url" value="jdbc:oracle:thin:@localhost:1521:xe"></beans:property>
		<beans:property name="username" value="c##kh"></beans:property>
		<beans:property name="password" value="c##kh"></beans:property>
	</beans:bean>
	
	<beans:bean id="dbcpSource" class="org.apache.commons.dbcp2.BasicDataSource">
		<beans:property name="driverClassName" value="oracle.jdbc.OracleDriver"></beans:property>
		<beans:property name="url" value="jdbc:oracle:thin:@localhost:1521:xe"></beans:property>
		<beans:property name="username" value="c##kh"></beans:property>
		<beans:property name="password" value="c##kh"></beans:property>
		<beans:property name="maxTotal" value="20"></beans:property>
		<beans:property name="maxIdle" value="10"></beans:property>
		<beans:property name="maxWaitMillis" value="3000"></beans:property>
	</beans:bean>
	
	<beans:bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<!-- DI(Dependency Injection) : 필요한 도구를 주입시키는 것 -->
		<beans:property name="dataSource" ref="driverManager"></beans:property>
	</beans:bean>
	
	
	
	<!--  myBatis를 이용하기 위한 도구 등록
	     	- sqlSessionTemplate : 구문 실행을 위한 템플릿을 제공하는 도구
	     	- sqlSession : 실제로 SQL 구문을 실행시키는 도구
	 -->
	<beans:bean id="sqlSession" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 연결을 위한 도구를 참조 설정 -->
		<beans:property name="dataSource" ref="dbcpSource"></beans:property>
		<!-- myBatis 설정파일의 위치를 설정 -->
		<beans:property name="configLocation" value="classpath:/mybatis/mybatis-config.xml"></beans:property>
		<!-- 실제 실행할 명령 파일 위치를 설정 -->
		<beans:property name="mapperLocations" value="classpath:/mybatis/**/*-mapper.xml"></beans:property>
	</beans:bean>
	
	<beans:bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<!-- myBatis 실행 도구에 대한 참조 설정 -->
		<beans:constructor-arg index="0" ref="sqlSession"></beans:constructor-arg>
	</beans:bean>
	
	<beans:bean id="encoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
	</beans:bean>
	
</beans:beans>
